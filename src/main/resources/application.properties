# MySQL配置
# 开发环境
#spring.datasource.url=jdbc:mysql://localhost:3306/book?serverTimezone=UTC&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=123456
# 生产环境
spring.datasource.url=jdbc:mysql://localhost:3306/book?serverTimezone=UTC&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=none
# 启用SQL语句的日志记录。
spring.jpa.show-sql=true

# Redis配置
# 在群集上执行命令时重定向的最大数量。
# spring.redis.cluster.max-redirects=100
# 逗号分隔的“主机：端口”对从Bootstrap中。
# spring.redis.cluster.nodes=
# 连接工厂使用的数据库索引。
spring.redis.database=0
# 连接URL将覆盖主机、端口和密码（用户将被忽略），例如redis://user:password@example.com:6379
# spring.redis.url=
# Redis 服务器主机。
# spring.redis.host=localhost
spring.redis.host=47.105.152.179
# Redis 服务器的登录密码。
# spring.redis.password=
spring.redis.password=3HDHNlyM9Tcm3eb1
# 启用SSL支持。
spring.redis.ssl=false
# 可在给定时间由池分配的最大连接数。使用负值不受限制。
spring.redis.pool.max-active=-1
# 池中的“空闲”连接的最大数目。使用负值指示无限数量的空闲连接。 
spring.redis.pool.max-idle=-1
# 在池耗尽时抛出异常之前，连接分配的最大时间（毫秒）应该阻塞。使用负值无限期地阻止。
spring.redis.pool.max-wait=-1
# 在池中维护的最小空闲连接数的目标。这个设置只有当它是正时才有效果。
spring.redis.pool.min-idle=0
# Redis 服务器端口。
spring.redis.port=6379
# Redis 服务器的名称。
# spring.redis.sentinel.master=
# 逗号分隔的主机列表：端口对。
# spring.redis.sentinel.nodes=
# 连接超时（以毫秒为单位）。
spring.redis.timeout=0

# 快速重新启动
spring.devtools.livereload.enabled=true

# Windows
server.upload.path=C:/xadhsd/book/server/upload/
# Linux
# server.upload.path=/user/local/xadhsd/book/server/upload/

spring.servlet.multipart.max-file-size=102400KB
spring.servlet.multipart.max-request-size=102400KB

spring.http.multipart.enabled=true
spring.http.multipart.maxFileSize=102400KB
spring.http.multipart.maxRequestSize=102400KB
